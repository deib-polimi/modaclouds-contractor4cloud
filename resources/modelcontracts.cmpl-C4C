%%arg -solver %s
%%arg -solutionAscii %s
%%display var D* S* R* X* Y*
%%display ignoreCons
%%display nonZeros
%%opt cplex threads %4$d
%%opt cbc threads %4$d
%%opt glpk threads %4$d

%%data %s : CONTRACT set, TIME_INT set, PercentageOfS, CostD, CostS[TIME_INT], CostR[CONTRACT], InitialCostR[CONTRACT], Instances[TIME_INT], M, DaysConsidered

parameters:
  InvDays := 1/DaysConsidered;
  Eta := PercentageOfS / (1 - PercentageOfS);

variables:
  S[TIME_INT]: integer[0..];
  D[TIME_INT]: integer[0..];
  R[CONTRACT, TIME_INT]: integer[0..];
  X[CONTRACT]: integer[0..];
  Y[CONTRACT]: binary;

objectives:
  Total_Cost: sum{c in CONTRACT: InitialCostR[c] * X[c] * InvDays} + sum{t in TIME_INT: CostD * D[t] + CostS[t] * S[t] + sum{c in CONTRACT: CostR[c] * R[c, t]} } ->min;

constraints:
  #AllInstancesAllocated
  {t in TIME_INT: D[t] + S[t] + sum{c in CONTRACT: R[c, t]} = Instances[t];}

  #PercentageOfOnSpotRespected
  {t in TIME_INT: S[t] <= Eta * D[t] + sum{c in CONTRACT: R[c, t] * Eta}  ;}

  #C13
  {c in CONTRACT: X[c] <= M * Y[c];}

  #C14
  {c in CONTRACT, t in TIME_INT: R[c, t] <= M * Y[c];}

  #C15
  {c in CONTRACT, t in TIME_INT: R[c, t] <= X[c];}

  #OnlyOneTypeOfContract
  sum{c in CONTRACT: Y[c]} = 1;